
const { json } = require('express');
const express = require('express')
const bodyParser = express.json()
const JournalRouter = express.Router()
const { JournalService } = require('../service-objects/journal-service')
const app = express();
const xss = require('xss')
const moment = require('moment')

const serializePost = post => ({  
    id: post.id,
    title : xss(post.title),
    content : xss(post.content),
    modified: moment(post.date_created).format('MM/DD/YYYY')
})



JournalRouter
    .route('/:username/:id')
    .all((req,res,next) => {
        JournalService.getPostById(
            req.app.get('db'), 
            req.params.id,
        )
        .then(post => {
            if(!post) {
                return res.status(404).json(
                {error:
                    {message : `Post not found`}
                 }
                )
            }
            res.post = post 
            next();
        })
        .catch(next);
    })
    .get((req,res,next) => {
        res.json(res.post)
    })
    .delete((req,res,next) => {
        JournalService.deletePost(
            req.app.get('db'), 
            req.params.id
        )
        .then(post => {
            return res.status(204).end();
        })
        .catch(next);

    })
    .patch(bodyParser,(req,res,next) => {

        //cannot update title only content
        const { content } = req.body
        const updatedContent  = { content }

        const numOfValues = Object.values(updatedContent).filter(Boolean).length

        if(numOfValues == 0){
            return res.status(400).json({error:
            {message : `Req.body must contain updated content`}})
        }

        JournalService.updatePost(
            req.app.get('db'), 
            req.params.id,
            updatedContent
        )
        .then(updatedContent => {
            return res.status(204).end()
        })
        .catch(next);       
    })


    JournalRouter   
        .route('/:user_name')
        .get((req,res,next) => {
            const {user_name} = req.params

            JournalService.getPost(
                req.app.get('db'), 
                 
                user_name
            )
            .then(posts => {
                
                res.json(posts.map(serializePost))

            })
            .catch(next);
        })
        .post(bodyParser, (req,res,next) => {
            
            //do i need to include modified in here? I belive
            //it should be autogenerated for me:
           const { title, content } = req.body
           const { user_name } = req.params

           const newPost = { title, content, user_name }


           for (const[value] of Object.entries(newPost)){
               if(value == null){
                   //204 instead of 400?
                   return res.status(400).json({error:
                {message:`Nothing to Post`}});
               }
           }

           JournalService.createPost(
            req.app.get('db'), 
            newPost 
           )
           .then( post => {
                res
                    .status(201)
                    .json(serializePost(post))
           })
           .catch(next);
        });


module.exports = JournalRouter;

